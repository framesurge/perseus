
use builtin;
use str;

set edit:completion:arg-completer[perseus] = {|@words|
    fn spaces {|n|
        builtin:repeat $n ' ' | str:join ''
    }
    fn cand {|text desc|
        edit:complex-candidate $text &display=$text' '(spaces (- 14 (wcswidth $text)))$desc
    }
    var command = 'perseus'
    for word $words[1..-1] {
        if (str:has-prefix $word '-') {
            break
        }
        set command = $command';'$word
    }
    var completions = [
        &'perseus'= {
            cand --cargo-engine-path 'The path to `cargo` when used for engine builds'
            cand --cargo-browser-path 'The path to `cargo` when used for browser builds'
            cand --wasm-bindgen-path 'A path to `wasm-bindgen`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --wasm-opt-path 'A path to `wasm-opt`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --rustup-path 'The path to `rustup`'
            cand --wasm-release-rustflags 'The value of `RUSTFLAGS` when building for Wasm in release mode (this will not impact internal target-gating)'
            cand --cargo-engine-args 'Any arguments to `cargo` when building for the engine-side'
            cand --cargo-browser-args 'Any arguments to `cargo` when building for the browser-side'
            cand --wasm-bindgen-args 'Any arguments to `wasm-bindgen`'
            cand --wasm-opt-args 'Any arguments to `wasm-opt` (only run in release builds)'
            cand --git-path 'The path to `git` (for downloading custom templates for `perseus new`)'
            cand --reload-server-host 'The host for the reload server (you should almost never change this)'
            cand --reload-server-port 'The port for the reload server (you should almost never change this)'
            cand --wasm-bindgen-version 'A custom version of `wasm-bindgen` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --wasm-opt-version 'A custom version of `wasm-opt` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --sequential 'If this is set, commands will be run sequentially rather than in parallel (slows down operations, but reduces memory usage)'
            cand --no-browser-reload 'Disable automatic browser reloading'
            cand --no-system-tools-cache 'Disables the system-wide tools cache in `~/.cargo/perseus_tools/` (you should set this for CI)'
            cand --verbose 'Shows the logs from building and serving your app no matter what (the default is to only show them on a compilation/build failure); this is intended mainly for end-to-end debugging, although the `snoop` commands are more useful for targeted debugging'
            cand --disable-bundle-compression 'Disable Brotli compression of JS and Wasm bundles (may degrade performance)'
            cand -h 'Print help'
            cand --help 'Print help'
            cand -V 'Print version'
            cand --version 'Print version'
            cand build 'Builds your app'
            cand export-error-page 'Exports an error page for the given HTTP status code'
            cand export 'Exports your app to purely static files'
            cand serve 'Serves your app'
            cand test 'Serves your app as `perseus serve` does, but puts it in testing mode'
            cand clean 'Removes build artifacts in the `dist/` directory'
            cand deploy 'Packages your app for deployment'
            cand tinker 'Runs the `tinker` action of plugins, which lets them modify the Perseus engine'
            cand snoop 'Runs one of the underlying commands that builds your app, allowing you to see more detailed logs'
            cand new 'Creates a new Perseus project in a directory of the given name, which will be created in the current path'
            cand init 'Initializes a new Perseus project in the current directory'
            cand check 'Checks if your app builds properly for both the engine-side and the browser-side'
            cand help 'Print this message or the help of the given subcommand(s)'
        }
        &'perseus;build'= {
            cand --custom-watch 'Marks a specific file/directory to be watched (directories will be recursively watched)'
            cand --cargo-engine-path 'The path to `cargo` when used for engine builds'
            cand --cargo-browser-path 'The path to `cargo` when used for browser builds'
            cand --wasm-bindgen-path 'A path to `wasm-bindgen`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --wasm-opt-path 'A path to `wasm-opt`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --rustup-path 'The path to `rustup`'
            cand --wasm-release-rustflags 'The value of `RUSTFLAGS` when building for Wasm in release mode (this will not impact internal target-gating)'
            cand --cargo-engine-args 'Any arguments to `cargo` when building for the engine-side'
            cand --cargo-browser-args 'Any arguments to `cargo` when building for the browser-side'
            cand --wasm-bindgen-args 'Any arguments to `wasm-bindgen`'
            cand --wasm-opt-args 'Any arguments to `wasm-opt` (only run in release builds)'
            cand --git-path 'The path to `git` (for downloading custom templates for `perseus new`)'
            cand --reload-server-host 'The host for the reload server (you should almost never change this)'
            cand --reload-server-port 'The port for the reload server (you should almost never change this)'
            cand --wasm-bindgen-version 'A custom version of `wasm-bindgen` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --wasm-opt-version 'A custom version of `wasm-opt` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --release 'Build for production'
            cand -w 'Watch the files in your working directory for changes (excluding `target/` and `dist/`)'
            cand --watch 'Watch the files in your working directory for changes (excluding `target/` and `dist/`)'
            cand --sequential 'If this is set, commands will be run sequentially rather than in parallel (slows down operations, but reduces memory usage)'
            cand --no-browser-reload 'Disable automatic browser reloading'
            cand --no-system-tools-cache 'Disables the system-wide tools cache in `~/.cargo/perseus_tools/` (you should set this for CI)'
            cand --verbose 'Shows the logs from building and serving your app no matter what (the default is to only show them on a compilation/build failure); this is intended mainly for end-to-end debugging, although the `snoop` commands are more useful for targeted debugging'
            cand --disable-bundle-compression 'Disable Brotli compression of JS and Wasm bundles (may degrade performance)'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'perseus;export-error-page'= {
            cand -c 'c'
            cand --code 'code'
            cand -o 'o'
            cand --output 'output'
            cand --cargo-engine-path 'The path to `cargo` when used for engine builds'
            cand --cargo-browser-path 'The path to `cargo` when used for browser builds'
            cand --wasm-bindgen-path 'A path to `wasm-bindgen`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --wasm-opt-path 'A path to `wasm-opt`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --rustup-path 'The path to `rustup`'
            cand --wasm-release-rustflags 'The value of `RUSTFLAGS` when building for Wasm in release mode (this will not impact internal target-gating)'
            cand --cargo-engine-args 'Any arguments to `cargo` when building for the engine-side'
            cand --cargo-browser-args 'Any arguments to `cargo` when building for the browser-side'
            cand --wasm-bindgen-args 'Any arguments to `wasm-bindgen`'
            cand --wasm-opt-args 'Any arguments to `wasm-opt` (only run in release builds)'
            cand --git-path 'The path to `git` (for downloading custom templates for `perseus new`)'
            cand --reload-server-host 'The host for the reload server (you should almost never change this)'
            cand --reload-server-port 'The port for the reload server (you should almost never change this)'
            cand --wasm-bindgen-version 'A custom version of `wasm-bindgen` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --wasm-opt-version 'A custom version of `wasm-opt` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --sequential 'If this is set, commands will be run sequentially rather than in parallel (slows down operations, but reduces memory usage)'
            cand --no-browser-reload 'Disable automatic browser reloading'
            cand --no-system-tools-cache 'Disables the system-wide tools cache in `~/.cargo/perseus_tools/` (you should set this for CI)'
            cand --verbose 'Shows the logs from building and serving your app no matter what (the default is to only show them on a compilation/build failure); this is intended mainly for end-to-end debugging, although the `snoop` commands are more useful for targeted debugging'
            cand --disable-bundle-compression 'Disable Brotli compression of JS and Wasm bundles (may degrade performance)'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'perseus;export'= {
            cand --host 'Where to host your exported app'
            cand --port 'The port to host your exported app on'
            cand --custom-watch 'Marks a specific file/directory to be watched (directories will be recursively watched)'
            cand --cargo-engine-path 'The path to `cargo` when used for engine builds'
            cand --cargo-browser-path 'The path to `cargo` when used for browser builds'
            cand --wasm-bindgen-path 'A path to `wasm-bindgen`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --wasm-opt-path 'A path to `wasm-opt`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --rustup-path 'The path to `rustup`'
            cand --wasm-release-rustflags 'The value of `RUSTFLAGS` when building for Wasm in release mode (this will not impact internal target-gating)'
            cand --cargo-engine-args 'Any arguments to `cargo` when building for the engine-side'
            cand --cargo-browser-args 'Any arguments to `cargo` when building for the browser-side'
            cand --wasm-bindgen-args 'Any arguments to `wasm-bindgen`'
            cand --wasm-opt-args 'Any arguments to `wasm-opt` (only run in release builds)'
            cand --git-path 'The path to `git` (for downloading custom templates for `perseus new`)'
            cand --reload-server-host 'The host for the reload server (you should almost never change this)'
            cand --reload-server-port 'The port for the reload server (you should almost never change this)'
            cand --wasm-bindgen-version 'A custom version of `wasm-bindgen` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --wasm-opt-version 'A custom version of `wasm-opt` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --release 'Export for production'
            cand -s 'Serve the generated static files locally'
            cand --serve 'Serve the generated static files locally'
            cand -w 'Watch the files in your working directory for changes (excluding `target/` and `dist/`)'
            cand --watch 'Watch the files in your working directory for changes (excluding `target/` and `dist/`)'
            cand --sequential 'If this is set, commands will be run sequentially rather than in parallel (slows down operations, but reduces memory usage)'
            cand --no-browser-reload 'Disable automatic browser reloading'
            cand --no-system-tools-cache 'Disables the system-wide tools cache in `~/.cargo/perseus_tools/` (you should set this for CI)'
            cand --verbose 'Shows the logs from building and serving your app no matter what (the default is to only show them on a compilation/build failure); this is intended mainly for end-to-end debugging, although the `snoop` commands are more useful for targeted debugging'
            cand --disable-bundle-compression 'Disable Brotli compression of JS and Wasm bundles (may degrade performance)'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'perseus;serve'= {
            cand --custom-watch 'Marks a specific file/directory to be watched (directories will be recursively watched)'
            cand --host 'Where to host your exported app'
            cand --port 'The port to host your exported app on'
            cand --cargo-engine-path 'The path to `cargo` when used for engine builds'
            cand --cargo-browser-path 'The path to `cargo` when used for browser builds'
            cand --wasm-bindgen-path 'A path to `wasm-bindgen`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --wasm-opt-path 'A path to `wasm-opt`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --rustup-path 'The path to `rustup`'
            cand --wasm-release-rustflags 'The value of `RUSTFLAGS` when building for Wasm in release mode (this will not impact internal target-gating)'
            cand --cargo-engine-args 'Any arguments to `cargo` when building for the engine-side'
            cand --cargo-browser-args 'Any arguments to `cargo` when building for the browser-side'
            cand --wasm-bindgen-args 'Any arguments to `wasm-bindgen`'
            cand --wasm-opt-args 'Any arguments to `wasm-opt` (only run in release builds)'
            cand --git-path 'The path to `git` (for downloading custom templates for `perseus new`)'
            cand --reload-server-host 'The host for the reload server (you should almost never change this)'
            cand --reload-server-port 'The port for the reload server (you should almost never change this)'
            cand --wasm-bindgen-version 'A custom version of `wasm-bindgen` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --wasm-opt-version 'A custom version of `wasm-opt` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --no-run 'Don''t run the final binary, but print its location instead as the last line of output'
            cand --no-build 'Only build the server, and use the results of a previous `perseus build`'
            cand --release 'Build and serve for production'
            cand --standalone 'Make the final binary standalone (this is used in `perseus deploy` only, don''t manually invoke it unless you have a good reason!)'
            cand -w 'Watch the files in your working directory for changes (excluding `target/` and `dist/`)'
            cand --watch 'Watch the files in your working directory for changes (excluding `target/` and `dist/`)'
            cand --sequential 'If this is set, commands will be run sequentially rather than in parallel (slows down operations, but reduces memory usage)'
            cand --no-browser-reload 'Disable automatic browser reloading'
            cand --no-system-tools-cache 'Disables the system-wide tools cache in `~/.cargo/perseus_tools/` (you should set this for CI)'
            cand --verbose 'Shows the logs from building and serving your app no matter what (the default is to only show them on a compilation/build failure); this is intended mainly for end-to-end debugging, although the `snoop` commands are more useful for targeted debugging'
            cand --disable-bundle-compression 'Disable Brotli compression of JS and Wasm bundles (may degrade performance)'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'perseus;test'= {
            cand --custom-watch 'Marks a specific file/directory to be watched (directories will be recursively watched)'
            cand --host 'Where to host your exported app'
            cand --port 'The port to host your exported app on'
            cand --cargo-engine-path 'The path to `cargo` when used for engine builds'
            cand --cargo-browser-path 'The path to `cargo` when used for browser builds'
            cand --wasm-bindgen-path 'A path to `wasm-bindgen`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --wasm-opt-path 'A path to `wasm-opt`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --rustup-path 'The path to `rustup`'
            cand --wasm-release-rustflags 'The value of `RUSTFLAGS` when building for Wasm in release mode (this will not impact internal target-gating)'
            cand --cargo-engine-args 'Any arguments to `cargo` when building for the engine-side'
            cand --cargo-browser-args 'Any arguments to `cargo` when building for the browser-side'
            cand --wasm-bindgen-args 'Any arguments to `wasm-bindgen`'
            cand --wasm-opt-args 'Any arguments to `wasm-opt` (only run in release builds)'
            cand --git-path 'The path to `git` (for downloading custom templates for `perseus new`)'
            cand --reload-server-host 'The host for the reload server (you should almost never change this)'
            cand --reload-server-port 'The port for the reload server (you should almost never change this)'
            cand --wasm-bindgen-version 'A custom version of `wasm-bindgen` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --wasm-opt-version 'A custom version of `wasm-opt` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --no-build 'Only build the testing server, and use the results of a previous `perseus build`'
            cand --show-browser 'Show the browser window when testing (by default, the browser is used in ''headless'' mode); this can be useful for debugging failing tests in some cases'
            cand -w 'Watch the files in your working directory for changes (excluding `target/` and `dist/`)'
            cand --watch 'Watch the files in your working directory for changes (excluding `target/` and `dist/`)'
            cand --sequential 'If this is set, commands will be run sequentially rather than in parallel (slows down operations, but reduces memory usage)'
            cand --no-browser-reload 'Disable automatic browser reloading'
            cand --no-system-tools-cache 'Disables the system-wide tools cache in `~/.cargo/perseus_tools/` (you should set this for CI)'
            cand --verbose 'Shows the logs from building and serving your app no matter what (the default is to only show them on a compilation/build failure); this is intended mainly for end-to-end debugging, although the `snoop` commands are more useful for targeted debugging'
            cand --disable-bundle-compression 'Disable Brotli compression of JS and Wasm bundles (may degrade performance)'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'perseus;clean'= {
            cand --cargo-engine-path 'The path to `cargo` when used for engine builds'
            cand --cargo-browser-path 'The path to `cargo` when used for browser builds'
            cand --wasm-bindgen-path 'A path to `wasm-bindgen`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --wasm-opt-path 'A path to `wasm-opt`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --rustup-path 'The path to `rustup`'
            cand --wasm-release-rustflags 'The value of `RUSTFLAGS` when building for Wasm in release mode (this will not impact internal target-gating)'
            cand --cargo-engine-args 'Any arguments to `cargo` when building for the engine-side'
            cand --cargo-browser-args 'Any arguments to `cargo` when building for the browser-side'
            cand --wasm-bindgen-args 'Any arguments to `wasm-bindgen`'
            cand --wasm-opt-args 'Any arguments to `wasm-opt` (only run in release builds)'
            cand --git-path 'The path to `git` (for downloading custom templates for `perseus new`)'
            cand --reload-server-host 'The host for the reload server (you should almost never change this)'
            cand --reload-server-port 'The port for the reload server (you should almost never change this)'
            cand --wasm-bindgen-version 'A custom version of `wasm-bindgen` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --wasm-opt-version 'A custom version of `wasm-opt` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --sequential 'If this is set, commands will be run sequentially rather than in parallel (slows down operations, but reduces memory usage)'
            cand --no-browser-reload 'Disable automatic browser reloading'
            cand --no-system-tools-cache 'Disables the system-wide tools cache in `~/.cargo/perseus_tools/` (you should set this for CI)'
            cand --verbose 'Shows the logs from building and serving your app no matter what (the default is to only show them on a compilation/build failure); this is intended mainly for end-to-end debugging, although the `snoop` commands are more useful for targeted debugging'
            cand --disable-bundle-compression 'Disable Brotli compression of JS and Wasm bundles (may degrade performance)'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'perseus;deploy'= {
            cand -o 'Change the output from `pkg/` to somewhere else'
            cand --output 'Change the output from `pkg/` to somewhere else'
            cand --cargo-engine-path 'The path to `cargo` when used for engine builds'
            cand --cargo-browser-path 'The path to `cargo` when used for browser builds'
            cand --wasm-bindgen-path 'A path to `wasm-bindgen`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --wasm-opt-path 'A path to `wasm-opt`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --rustup-path 'The path to `rustup`'
            cand --wasm-release-rustflags 'The value of `RUSTFLAGS` when building for Wasm in release mode (this will not impact internal target-gating)'
            cand --cargo-engine-args 'Any arguments to `cargo` when building for the engine-side'
            cand --cargo-browser-args 'Any arguments to `cargo` when building for the browser-side'
            cand --wasm-bindgen-args 'Any arguments to `wasm-bindgen`'
            cand --wasm-opt-args 'Any arguments to `wasm-opt` (only run in release builds)'
            cand --git-path 'The path to `git` (for downloading custom templates for `perseus new`)'
            cand --reload-server-host 'The host for the reload server (you should almost never change this)'
            cand --reload-server-port 'The port for the reload server (you should almost never change this)'
            cand --wasm-bindgen-version 'A custom version of `wasm-bindgen` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --wasm-opt-version 'A custom version of `wasm-opt` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand -e 'Export your app to purely static files (see `export`)'
            cand --export-static 'Export your app to purely static files (see `export`)'
            cand --no-minify-js 'Don''t minify JavaScript (this will decrease performance)'
            cand --sequential 'If this is set, commands will be run sequentially rather than in parallel (slows down operations, but reduces memory usage)'
            cand --no-browser-reload 'Disable automatic browser reloading'
            cand --no-system-tools-cache 'Disables the system-wide tools cache in `~/.cargo/perseus_tools/` (you should set this for CI)'
            cand --verbose 'Shows the logs from building and serving your app no matter what (the default is to only show them on a compilation/build failure); this is intended mainly for end-to-end debugging, although the `snoop` commands are more useful for targeted debugging'
            cand --disable-bundle-compression 'Disable Brotli compression of JS and Wasm bundles (may degrade performance)'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'perseus;tinker'= {
            cand --cargo-engine-path 'The path to `cargo` when used for engine builds'
            cand --cargo-browser-path 'The path to `cargo` when used for browser builds'
            cand --wasm-bindgen-path 'A path to `wasm-bindgen`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --wasm-opt-path 'A path to `wasm-opt`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --rustup-path 'The path to `rustup`'
            cand --wasm-release-rustflags 'The value of `RUSTFLAGS` when building for Wasm in release mode (this will not impact internal target-gating)'
            cand --cargo-engine-args 'Any arguments to `cargo` when building for the engine-side'
            cand --cargo-browser-args 'Any arguments to `cargo` when building for the browser-side'
            cand --wasm-bindgen-args 'Any arguments to `wasm-bindgen`'
            cand --wasm-opt-args 'Any arguments to `wasm-opt` (only run in release builds)'
            cand --git-path 'The path to `git` (for downloading custom templates for `perseus new`)'
            cand --reload-server-host 'The host for the reload server (you should almost never change this)'
            cand --reload-server-port 'The port for the reload server (you should almost never change this)'
            cand --wasm-bindgen-version 'A custom version of `wasm-bindgen` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --wasm-opt-version 'A custom version of `wasm-opt` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --no-clean 'Don''t remove and recreate the `dist/` directory'
            cand --sequential 'If this is set, commands will be run sequentially rather than in parallel (slows down operations, but reduces memory usage)'
            cand --no-browser-reload 'Disable automatic browser reloading'
            cand --no-system-tools-cache 'Disables the system-wide tools cache in `~/.cargo/perseus_tools/` (you should set this for CI)'
            cand --verbose 'Shows the logs from building and serving your app no matter what (the default is to only show them on a compilation/build failure); this is intended mainly for end-to-end debugging, although the `snoop` commands are more useful for targeted debugging'
            cand --disable-bundle-compression 'Disable Brotli compression of JS and Wasm bundles (may degrade performance)'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'perseus;snoop'= {
            cand --cargo-engine-path 'The path to `cargo` when used for engine builds'
            cand --cargo-browser-path 'The path to `cargo` when used for browser builds'
            cand --wasm-bindgen-path 'A path to `wasm-bindgen`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --wasm-opt-path 'A path to `wasm-opt`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --rustup-path 'The path to `rustup`'
            cand --wasm-release-rustflags 'The value of `RUSTFLAGS` when building for Wasm in release mode (this will not impact internal target-gating)'
            cand --cargo-engine-args 'Any arguments to `cargo` when building for the engine-side'
            cand --cargo-browser-args 'Any arguments to `cargo` when building for the browser-side'
            cand --wasm-bindgen-args 'Any arguments to `wasm-bindgen`'
            cand --wasm-opt-args 'Any arguments to `wasm-opt` (only run in release builds)'
            cand --git-path 'The path to `git` (for downloading custom templates for `perseus new`)'
            cand --reload-server-host 'The host for the reload server (you should almost never change this)'
            cand --reload-server-port 'The port for the reload server (you should almost never change this)'
            cand --wasm-bindgen-version 'A custom version of `wasm-bindgen` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --wasm-opt-version 'A custom version of `wasm-opt` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --sequential 'If this is set, commands will be run sequentially rather than in parallel (slows down operations, but reduces memory usage)'
            cand --no-browser-reload 'Disable automatic browser reloading'
            cand --no-system-tools-cache 'Disables the system-wide tools cache in `~/.cargo/perseus_tools/` (you should set this for CI)'
            cand --verbose 'Shows the logs from building and serving your app no matter what (the default is to only show them on a compilation/build failure); this is intended mainly for end-to-end debugging, although the `snoop` commands are more useful for targeted debugging'
            cand --disable-bundle-compression 'Disable Brotli compression of JS and Wasm bundles (may degrade performance)'
            cand -h 'Print help'
            cand --help 'Print help'
            cand build 'Snoops on the static generation process (this will let you see `dbg!` calls and the like)'
            cand wasm-build 'Snoops on the Wasm building process (mostly for debugging errors)'
            cand serve 'Snoops on the server process (run `perseus build` before this)'
            cand help 'Print this message or the help of the given subcommand(s)'
        }
        &'perseus;snoop;build'= {
            cand --custom-watch 'Marks a specific file/directory to be watched (directories will be recursively watched)'
            cand --cargo-engine-path 'The path to `cargo` when used for engine builds'
            cand --cargo-browser-path 'The path to `cargo` when used for browser builds'
            cand --wasm-bindgen-path 'A path to `wasm-bindgen`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --wasm-opt-path 'A path to `wasm-opt`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --rustup-path 'The path to `rustup`'
            cand --wasm-release-rustflags 'The value of `RUSTFLAGS` when building for Wasm in release mode (this will not impact internal target-gating)'
            cand --cargo-engine-args 'Any arguments to `cargo` when building for the engine-side'
            cand --cargo-browser-args 'Any arguments to `cargo` when building for the browser-side'
            cand --wasm-bindgen-args 'Any arguments to `wasm-bindgen`'
            cand --wasm-opt-args 'Any arguments to `wasm-opt` (only run in release builds)'
            cand --git-path 'The path to `git` (for downloading custom templates for `perseus new`)'
            cand --reload-server-host 'The host for the reload server (you should almost never change this)'
            cand --reload-server-port 'The port for the reload server (you should almost never change this)'
            cand --wasm-bindgen-version 'A custom version of `wasm-bindgen` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --wasm-opt-version 'A custom version of `wasm-opt` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand -w 'Watch the files in your working directory for changes (excluding `target/` and `dist/`)'
            cand --watch 'Watch the files in your working directory for changes (excluding `target/` and `dist/`)'
            cand --sequential 'If this is set, commands will be run sequentially rather than in parallel (slows down operations, but reduces memory usage)'
            cand --no-browser-reload 'Disable automatic browser reloading'
            cand --no-system-tools-cache 'Disables the system-wide tools cache in `~/.cargo/perseus_tools/` (you should set this for CI)'
            cand --verbose 'Shows the logs from building and serving your app no matter what (the default is to only show them on a compilation/build failure); this is intended mainly for end-to-end debugging, although the `snoop` commands are more useful for targeted debugging'
            cand --disable-bundle-compression 'Disable Brotli compression of JS and Wasm bundles (may degrade performance)'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'perseus;snoop;wasm-build'= {
            cand --custom-watch 'Marks a specific file/directory to be watched (directories will be recursively watched)'
            cand --cargo-engine-path 'The path to `cargo` when used for engine builds'
            cand --cargo-browser-path 'The path to `cargo` when used for browser builds'
            cand --wasm-bindgen-path 'A path to `wasm-bindgen`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --wasm-opt-path 'A path to `wasm-opt`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --rustup-path 'The path to `rustup`'
            cand --wasm-release-rustflags 'The value of `RUSTFLAGS` when building for Wasm in release mode (this will not impact internal target-gating)'
            cand --cargo-engine-args 'Any arguments to `cargo` when building for the engine-side'
            cand --cargo-browser-args 'Any arguments to `cargo` when building for the browser-side'
            cand --wasm-bindgen-args 'Any arguments to `wasm-bindgen`'
            cand --wasm-opt-args 'Any arguments to `wasm-opt` (only run in release builds)'
            cand --git-path 'The path to `git` (for downloading custom templates for `perseus new`)'
            cand --reload-server-host 'The host for the reload server (you should almost never change this)'
            cand --reload-server-port 'The port for the reload server (you should almost never change this)'
            cand --wasm-bindgen-version 'A custom version of `wasm-bindgen` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --wasm-opt-version 'A custom version of `wasm-opt` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand -w 'Watch the files in your working directory for changes (excluding `target/` and `dist/`)'
            cand --watch 'Watch the files in your working directory for changes (excluding `target/` and `dist/`)'
            cand --sequential 'If this is set, commands will be run sequentially rather than in parallel (slows down operations, but reduces memory usage)'
            cand --no-browser-reload 'Disable automatic browser reloading'
            cand --no-system-tools-cache 'Disables the system-wide tools cache in `~/.cargo/perseus_tools/` (you should set this for CI)'
            cand --verbose 'Shows the logs from building and serving your app no matter what (the default is to only show them on a compilation/build failure); this is intended mainly for end-to-end debugging, although the `snoop` commands are more useful for targeted debugging'
            cand --disable-bundle-compression 'Disable Brotli compression of JS and Wasm bundles (may degrade performance)'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'perseus;snoop;serve'= {
            cand --host 'Where to host your exported app'
            cand --port 'The port to host your exported app on'
            cand --custom-watch 'Marks a specific file/directory to be watched (directories will be recursively watched)'
            cand --cargo-engine-path 'The path to `cargo` when used for engine builds'
            cand --cargo-browser-path 'The path to `cargo` when used for browser builds'
            cand --wasm-bindgen-path 'A path to `wasm-bindgen`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --wasm-opt-path 'A path to `wasm-opt`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --rustup-path 'The path to `rustup`'
            cand --wasm-release-rustflags 'The value of `RUSTFLAGS` when building for Wasm in release mode (this will not impact internal target-gating)'
            cand --cargo-engine-args 'Any arguments to `cargo` when building for the engine-side'
            cand --cargo-browser-args 'Any arguments to `cargo` when building for the browser-side'
            cand --wasm-bindgen-args 'Any arguments to `wasm-bindgen`'
            cand --wasm-opt-args 'Any arguments to `wasm-opt` (only run in release builds)'
            cand --git-path 'The path to `git` (for downloading custom templates for `perseus new`)'
            cand --reload-server-host 'The host for the reload server (you should almost never change this)'
            cand --reload-server-port 'The port for the reload server (you should almost never change this)'
            cand --wasm-bindgen-version 'A custom version of `wasm-bindgen` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --wasm-opt-version 'A custom version of `wasm-opt` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand -w 'Watch the files in your working directory for changes (excluding `target/` and `dist/`)'
            cand --watch 'Watch the files in your working directory for changes (excluding `target/` and `dist/`)'
            cand --sequential 'If this is set, commands will be run sequentially rather than in parallel (slows down operations, but reduces memory usage)'
            cand --no-browser-reload 'Disable automatic browser reloading'
            cand --no-system-tools-cache 'Disables the system-wide tools cache in `~/.cargo/perseus_tools/` (you should set this for CI)'
            cand --verbose 'Shows the logs from building and serving your app no matter what (the default is to only show them on a compilation/build failure); this is intended mainly for end-to-end debugging, although the `snoop` commands are more useful for targeted debugging'
            cand --disable-bundle-compression 'Disable Brotli compression of JS and Wasm bundles (may degrade performance)'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'perseus;snoop;help'= {
            cand build 'Snoops on the static generation process (this will let you see `dbg!` calls and the like)'
            cand wasm-build 'Snoops on the Wasm building process (mostly for debugging errors)'
            cand serve 'Snoops on the server process (run `perseus build` before this)'
            cand help 'Print this message or the help of the given subcommand(s)'
        }
        &'perseus;snoop;help;build'= {
        }
        &'perseus;snoop;help;wasm-build'= {
        }
        &'perseus;snoop;help;serve'= {
        }
        &'perseus;snoop;help;help'= {
        }
        &'perseus;new'= {
            cand -t 'An optional custom URL to a Git repository to be used as a custom template (note that custom templates will not respect your project''s name). This can be followed with `@branch` to fetch from `branch` rather than the default'
            cand --template 'An optional custom URL to a Git repository to be used as a custom template (note that custom templates will not respect your project''s name). This can be followed with `@branch` to fetch from `branch` rather than the default'
            cand --dir 'The path to a custom directory to create (if this is not provided, the project name will be used by default)'
            cand --cargo-engine-path 'The path to `cargo` when used for engine builds'
            cand --cargo-browser-path 'The path to `cargo` when used for browser builds'
            cand --wasm-bindgen-path 'A path to `wasm-bindgen`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --wasm-opt-path 'A path to `wasm-opt`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --rustup-path 'The path to `rustup`'
            cand --wasm-release-rustflags 'The value of `RUSTFLAGS` when building for Wasm in release mode (this will not impact internal target-gating)'
            cand --cargo-engine-args 'Any arguments to `cargo` when building for the engine-side'
            cand --cargo-browser-args 'Any arguments to `cargo` when building for the browser-side'
            cand --wasm-bindgen-args 'Any arguments to `wasm-bindgen`'
            cand --wasm-opt-args 'Any arguments to `wasm-opt` (only run in release builds)'
            cand --git-path 'The path to `git` (for downloading custom templates for `perseus new`)'
            cand --reload-server-host 'The host for the reload server (you should almost never change this)'
            cand --reload-server-port 'The port for the reload server (you should almost never change this)'
            cand --wasm-bindgen-version 'A custom version of `wasm-bindgen` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --wasm-opt-version 'A custom version of `wasm-opt` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --sequential 'If this is set, commands will be run sequentially rather than in parallel (slows down operations, but reduces memory usage)'
            cand --no-browser-reload 'Disable automatic browser reloading'
            cand --no-system-tools-cache 'Disables the system-wide tools cache in `~/.cargo/perseus_tools/` (you should set this for CI)'
            cand --verbose 'Shows the logs from building and serving your app no matter what (the default is to only show them on a compilation/build failure); this is intended mainly for end-to-end debugging, although the `snoop` commands are more useful for targeted debugging'
            cand --disable-bundle-compression 'Disable Brotli compression of JS and Wasm bundles (may degrade performance)'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'perseus;init'= {
            cand --cargo-engine-path 'The path to `cargo` when used for engine builds'
            cand --cargo-browser-path 'The path to `cargo` when used for browser builds'
            cand --wasm-bindgen-path 'A path to `wasm-bindgen`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --wasm-opt-path 'A path to `wasm-opt`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --rustup-path 'The path to `rustup`'
            cand --wasm-release-rustflags 'The value of `RUSTFLAGS` when building for Wasm in release mode (this will not impact internal target-gating)'
            cand --cargo-engine-args 'Any arguments to `cargo` when building for the engine-side'
            cand --cargo-browser-args 'Any arguments to `cargo` when building for the browser-side'
            cand --wasm-bindgen-args 'Any arguments to `wasm-bindgen`'
            cand --wasm-opt-args 'Any arguments to `wasm-opt` (only run in release builds)'
            cand --git-path 'The path to `git` (for downloading custom templates for `perseus new`)'
            cand --reload-server-host 'The host for the reload server (you should almost never change this)'
            cand --reload-server-port 'The port for the reload server (you should almost never change this)'
            cand --wasm-bindgen-version 'A custom version of `wasm-bindgen` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --wasm-opt-version 'A custom version of `wasm-opt` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --sequential 'If this is set, commands will be run sequentially rather than in parallel (slows down operations, but reduces memory usage)'
            cand --no-browser-reload 'Disable automatic browser reloading'
            cand --no-system-tools-cache 'Disables the system-wide tools cache in `~/.cargo/perseus_tools/` (you should set this for CI)'
            cand --verbose 'Shows the logs from building and serving your app no matter what (the default is to only show them on a compilation/build failure); this is intended mainly for end-to-end debugging, although the `snoop` commands are more useful for targeted debugging'
            cand --disable-bundle-compression 'Disable Brotli compression of JS and Wasm bundles (may degrade performance)'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'perseus;check'= {
            cand --custom-watch 'Marks a specific file/directory to be watched (directories will be recursively watched)'
            cand --cargo-engine-path 'The path to `cargo` when used for engine builds'
            cand --cargo-browser-path 'The path to `cargo` when used for browser builds'
            cand --wasm-bindgen-path 'A path to `wasm-bindgen`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --wasm-opt-path 'A path to `wasm-opt`, if you want to use a local installation (note that the CLI will install it locally for you by default)'
            cand --rustup-path 'The path to `rustup`'
            cand --wasm-release-rustflags 'The value of `RUSTFLAGS` when building for Wasm in release mode (this will not impact internal target-gating)'
            cand --cargo-engine-args 'Any arguments to `cargo` when building for the engine-side'
            cand --cargo-browser-args 'Any arguments to `cargo` when building for the browser-side'
            cand --wasm-bindgen-args 'Any arguments to `wasm-bindgen`'
            cand --wasm-opt-args 'Any arguments to `wasm-opt` (only run in release builds)'
            cand --git-path 'The path to `git` (for downloading custom templates for `perseus new`)'
            cand --reload-server-host 'The host for the reload server (you should almost never change this)'
            cand --reload-server-port 'The port for the reload server (you should almost never change this)'
            cand --wasm-bindgen-version 'A custom version of `wasm-bindgen` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand --wasm-opt-version 'A custom version of `wasm-opt` to use (defaults to the latest installed version, and after that the latest available from GitHub; update to latest can be forced with `latest`)'
            cand -w 'Watch the files in your working directory for changes (excluding `target/` and `dist/`)'
            cand --watch 'Watch the files in your working directory for changes (excluding `target/` and `dist/`)'
            cand -g 'Make sure the app''s page generation works properly (this will take much longer, but almost guarantees that your app will actually build); use this to catch errors in build state and the like'
            cand --generate 'Make sure the app''s page generation works properly (this will take much longer, but almost guarantees that your app will actually build); use this to catch errors in build state and the like'
            cand --sequential 'If this is set, commands will be run sequentially rather than in parallel (slows down operations, but reduces memory usage)'
            cand --no-browser-reload 'Disable automatic browser reloading'
            cand --no-system-tools-cache 'Disables the system-wide tools cache in `~/.cargo/perseus_tools/` (you should set this for CI)'
            cand --verbose 'Shows the logs from building and serving your app no matter what (the default is to only show them on a compilation/build failure); this is intended mainly for end-to-end debugging, although the `snoop` commands are more useful for targeted debugging'
            cand --disable-bundle-compression 'Disable Brotli compression of JS and Wasm bundles (may degrade performance)'
            cand -h 'Print help'
            cand --help 'Print help'
        }
        &'perseus;help'= {
            cand build 'Builds your app'
            cand export-error-page 'Exports an error page for the given HTTP status code'
            cand export 'Exports your app to purely static files'
            cand serve 'Serves your app'
            cand test 'Serves your app as `perseus serve` does, but puts it in testing mode'
            cand clean 'Removes build artifacts in the `dist/` directory'
            cand deploy 'Packages your app for deployment'
            cand tinker 'Runs the `tinker` action of plugins, which lets them modify the Perseus engine'
            cand snoop 'Runs one of the underlying commands that builds your app, allowing you to see more detailed logs'
            cand new 'Creates a new Perseus project in a directory of the given name, which will be created in the current path'
            cand init 'Initializes a new Perseus project in the current directory'
            cand check 'Checks if your app builds properly for both the engine-side and the browser-side'
            cand help 'Print this message or the help of the given subcommand(s)'
        }
        &'perseus;help;build'= {
        }
        &'perseus;help;export-error-page'= {
        }
        &'perseus;help;export'= {
        }
        &'perseus;help;serve'= {
        }
        &'perseus;help;test'= {
        }
        &'perseus;help;clean'= {
        }
        &'perseus;help;deploy'= {
        }
        &'perseus;help;tinker'= {
        }
        &'perseus;help;snoop'= {
            cand build 'Snoops on the static generation process (this will let you see `dbg!` calls and the like)'
            cand wasm-build 'Snoops on the Wasm building process (mostly for debugging errors)'
            cand serve 'Snoops on the server process (run `perseus build` before this)'
        }
        &'perseus;help;snoop;build'= {
        }
        &'perseus;help;snoop;wasm-build'= {
        }
        &'perseus;help;snoop;serve'= {
        }
        &'perseus;help;new'= {
        }
        &'perseus;help;init'= {
        }
        &'perseus;help;check'= {
        }
        &'perseus;help;help'= {
        }
    ]
    $completions[$command]
}
